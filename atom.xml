<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vinod's Octopress Blog]]></title>
  <link href="http://vinodlala.github.io/atom.xml" rel="self"/>
  <link href="http://vinodlala.github.io/"/>
  <updated>2013-12-10T14:19:58-05:00</updated>
  <id>http://vinodlala.github.io/</id>
  <author>
    <name><![CDATA[Vinod]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Story Stacker is up]]></title>
    <link href="http://vinodlala.github.io/blog/2013/12/10/story-stacker-is-up/"/>
    <updated>2013-12-10T13:54:00-05:00</updated>
    <id>http://vinodlala.github.io/blog/2013/12/10/story-stacker-is-up</id>
    <content type="html"><![CDATA[<p>www.storystacker.com is up.</p>

<p>I talked to my colleague at the school I used to teach at about incorporating the website into his creative writing class.  He was excited by the idea, especially considering that he&rsquo;s been teaching the class for over 20 years and never did collaborative writing for his students.  Hopefully his students will get into it.  I also offered to write stories with them and to award a prize in the form of an Amazon gift card for my favorite story.  I got into coding to build websites that people will use, and it would be great if Story Stacker worked out the same way.</p>

<p>Making the website has been a great experience for learning Backbone.js.  I really appreciate the power and flexibility of it.  I know enough that I am not an expert &ndash; I would consider my skill in it at the moment to be intermediate, at best.  But at least I know that I could know more.</p>

<p>At first, having an index of stories that led to an index of entries for one specific story seemed to work really well.  But when I decided to add an index of comments about one specific entry, my website started falling apart.</p>

<p>Without going into detail, I was basically making a lot of mistakes, particularly in terms of the philosophy behind Backbone.  A lack of commeents hid that, but once I started implementing comments, I had to do a lot of fixing.</p>

<p>Adding comments and user-specific functions (only a writer could edit his own entry or comment, only the story creator and chosen collaborators can add entries to a story, etc.) took a lot more time that I estimated.  These seem like simple ideas, but to implement them in Backbone for the first time had a steep learning curve for me.</p>

<p>Other than adding comments, I didn&rsquo;t get to add the functions besides &ldquo;Collaborative Writing.&rdquo;  These other functions will have to come out in a later version of Story Stacker:</p>

<p>&ldquo;Readers Offering Bounties/Commissions to Writers&rdquo;</p>

<p>&ldquo;Writers Pitching Ideas and Getting Funding&rdquo;</p>

<p>&ldquo;Using Bootstrap for Mobile Device Displays&rdquo;</p>

<p>&ldquo;Providing Inspiration through New York Times Book/Movie Reviews&rdquo;</p>

<p>&ldquo;Providing Updates through Text, E-mail, Facebook and Twitter&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Story Stacker]]></title>
    <link href="http://vinodlala.github.io/blog/2013/11/15/story-stacker/"/>
    <updated>2013-11-15T10:12:00-05:00</updated>
    <id>http://vinodlala.github.io/blog/2013/11/15/story-stacker</id>
    <content type="html"><![CDATA[<p>Story Stacker is intended to have three functions:</p>

<p>Collaborative Writing &ndash; Writers can get together to write stories together with friends or strangers.</p>

<p>Readers Offering Bounties to Writers &ndash; Readers can set bounties or offering commissions to writers to write their stories for them (such as a parent offering payment for someone to write a children&rsquo;s book with their child&rsquo;s name in it).</p>

<p>Writers Pitching Ideas and Getting Funding &ndash; Writers may have an idea, but they want to see if there is interest first.  They can pitch their ideas, and readers can express interest through votes or donations.</p>

<p>I decided to start with the Collaborative Writing aspect.  I saw that Backbone.js is used by many companies, including companies I am interested in joining such as Khan Academy and Code School.</p>

<p>I did a copy-and-paste Todos app using Backbone and I did tutorials on Code School for Backbone.</p>

<p>I really wanted to understand Backbone better and decided to use it for my project.  I figured it would take me longer than usual to build stuff at first, but in the long run it would be a time-saver.</p>

<p>Using Backbone has been making me take me a lot longer than I estimated, but I am also realizing just how powerful it is.  I still consider myself a novice with Backbone, but I think, given time and practice, it can become second nature to me.</p>

<p>I also used Bootstrap with the intention of having Story Stacker look good on smaller screens of handheld devices.  Writing does not have to be limited to a computer.</p>

<p>David showed me how to use Pusher, so that readers get the most up to date list of entries for a story.</p>

<p>I keep getting other ideas to implement, and I&rsquo;m not sure where to start.  I was considering using the New York Times APIs for book lists and movie reviews, pulling plot summaries to provide inspiration.</p>

<p>Although I am happy with how the website is going so far, my interest in it and my hopes for it waver a lot.  Sometimes I think I am just wasting my time building something that no one will really be interested in.  Other times I think this is filling a niche.  I will keep hacking away at it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails]]></title>
    <link href="http://vinodlala.github.io/blog/2013/10/11/rails/"/>
    <updated>2013-10-11T12:22:00-04:00</updated>
    <id>http://vinodlala.github.io/blog/2013/10/11/rails</id>
    <content type="html"><![CDATA[<p>&ldquo;Worldwalker&rdquo;</p>

<p>This was a very cool app once it got going.</p>

<p>&ldquo;Work environment reset&rdquo;</p>

<p>Spending the morning setting up machines was a good exercise, but it could have been done on the first day of class.</p>

<p>The tips we get throughout the course are useful, but I ended up just putting them off and then forgetting about them.  So while we&rsquo;re setting up our boxes with gems, editors, etc., we could follow the tips of installing apps like alfred, dash, etc.</p>

<p>&ldquo;linker_app_rails&rdquo;</p>

<p>After doing the regular linker_app (which wasn&rsquo;t an assigned workshop but inserted &ldquo;before&rdquo; the first stackworld in the curriculum but &ldquo;after&rdquo; the first stackworld chronologically), I got a real appreciation for rails.  Rails has a learning curve, but it&rsquo;s ultimately worth it since rails does so much work for us.</p>

<p>&ldquo;stackworld_rails&rdquo;</p>

<p>Same idea as linker_app_rails.  One thing I did that helped me appreciate rails was have both the original StackWorld project and the new StackWorld__rails project open in separate sublime editors.  I then compared the files to each other.</p>

<p>I had no problem creating rooms/connections/items/players and editing rooms.  Editing connections/items/players was an issue because there was no parallel in the original StackWorld.  I implemented editing of the first record, but didn&rsquo;t come up with a way to edit other records.</p>

<p>In the future, I think ditching items and players would be good.  Items didn&rsquo;t really add anything.  Dealing with things like player sessions could be a separate app.  Just focus on rooms and connections.  Also, having us use all seven actions would be good.  So less data, more actions.</p>

<p>&ldquo;RoutingTestFirst&rdquo;</p>

<p>This was good, but I thought there was too much information to absorb at once from the reading, followed by too many questions to answer in the rspec.</p>

<p>The rpsec could have comments that point out what particular section to read that is relevant to pass a particular test.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Friday]]></title>
    <link href="http://vinodlala.github.io/blog/2013/10/04/friday/"/>
    <updated>2013-10-04T09:41:00-04:00</updated>
    <id>http://vinodlala.github.io/blog/2013/10/04/friday</id>
    <content type="html"><![CDATA[<p>Stackworld:</p>

<p>This workshop was a lot of fun and gave me a much better understanding of how games I play work.  It also gave me ideas for potential websites (making a similar game but instead of killing dragons the user has to solve problems).</p>

<p>There was good buildup for the Stackworld workshop, too &ndash; do a basic game first, then add player information storage and/or pusher capability later.  This was a bit copy-and-pasty.  I could have used a bit of pseudo-code to at least come up with something somewhat resembling real code before frustration set in and I went for the solution.  The explanations are good, but some ask-yourself questions would have been good, too.</p>

<p>Installing postgres was a pain for me as well as other students.  Eventually, we worked through it, but we all had similar solutions.</p>

<p>Sinatra and tux are great tools.</p>

<p>Sinatra Linker was added after SimStackWorld, and it was a nice review, but I think it would have been better to actually do Sinatra Linker before doing SimStackWorld.</p>

<p>Regex:</p>

<p>This workshop was good, but could use more simple challenges that build up to the harder challenges that are already there.  For example, search for 3 letter phrases, then look for 3 digit base-10 numbers, then look for 3 digit base 16 numbers, then look for 6 digit hex strings, then look for 3-or-6 digit hexstrings.  Hints and solutions would have been nice, too.  Generally, test strings could be a bit more complicated so that the regex expressions have to be tighter.  It seemed like the importance of () was missed.</p>

<p>Paired vs. solo programming:</p>

<p>I definitely like working alone more than working in a pair.  I am fine asking questions and answering questions as needed.  I think if someone just hipchatted &ldquo;I need help with #{some_problem}&rdquo; anyone else would be willing to throw them a hint or sit down with them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL and Ruby]]></title>
    <link href="http://vinodlala.github.io/blog/2013/09/27/sql-and-ruby/"/>
    <updated>2013-09-27T09:18:00-04:00</updated>
    <id>http://vinodlala.github.io/blog/2013/09/27/sql-and-ruby</id>
    <content type="html"><![CDATA[<p>The second week has also been both fun and productive.</p>

<p>The bowling project was a nice way to go over RSpec using a familiar, yet somewhat complicated set of rules.</p>

<p>The blackjack project was also very good, for the same reasons.</p>

<p>It was a great idea to use IMDB as the basis for learning about databases and SQL.</p>

<p>Using SQL statements in the terminal was good.  I hope we continue small challenges with hints that are hidden until clicked on.  Hints could be real hints (such as how to start a query, or a question to think about).  I like seeing correct output so I really know I did the challlenge right.  And multiple solutions (correct code) are also good to see.</p>

<p>So the order can be challenge, correct output, hints, correct code.</p>

<p>Using SQL statements in a ruby program and learning about meta-programming was mind-blasting.  I think I really understand how to use instance and class methods.  TTL was okay, but I don&rsquo;t think it reallly enhanced my understanding as much as just having a chance to do some research on it.  For the past couple of weeks, I liked not having to get into teacher-mode.</p>

<p>For the paired programming for SimpleRecord, my partner was not there the first day, and it was nice to work alone.  I found I could focus on a train of thought for a while, without getting derailed with a distraction.  This time around, having a teacher sit with me a couple of times for a few minutes at a time worked well for me.  I also didn&rsquo;t have to hold back the urge to take the keyboard away and do it myself.</p>

<p>Hipchat has been fun and useful.  The students have random conversations verbally, which is a nice break from coding, but having Hipchat conversations is also good because it is not disturbing or distracting to others.</p>

<p>Hipchat has also been great for sharing code, whether it is snippets of code or a bunch of files (such as the ones made during paired programming).  Jeffrey in particular has been great about explaining and sharing code, and has been my go-to when David and Nimit are not available.  I try to pay it forward by sharing explanations and code with other students.</p>

<p>Sometimes I get to a point where no matter how much I think about a coding issue, I simply cannot get past it.  When I see the solution, it suddenly makes sense.  Sometimes the solution does something very clever that I don&rsquo;t think I would have thought of on my own, which is cool.  Other times the solution uses something I never learned, which can be frustrating.</p>

<p>I actually like using a website (treehouse, codeacademy, or codeschool) during the day for learning, but the SQL videos and challenges we did for SQL were kind of painful (annoying speaker, no editing on the command line, unforgiving with errors).</p>

<p>At this point, I feel very comfortable with Ruby and SQL.</p>

<p>On the other hand, Git still seems kind of cryptic to me.  I am still in monkey-see monkey-do mode without really understanding what is going on.  I will go into that on my own.</p>

<p>For the weekly blog post, questions to answer would be good.  With TTL, we were given questions to answer and that provided focus.  For weekly blog posts, maybe we can be given similar questions, such as &ldquo;What did you like/hate about Bowling/Blackjack/SimpleRecord?&rdquo; and &ldquo;How do you feel about Ruby/SQL/Git?&rdquo;</p>

<p>The Fullstack++ dinner was great for meeting others.  My parents enjoyed meeting my classmates, and she would be happy to invite students who have no Thanksgiving plans to join us.</p>

<p>My brother was interested in attending before the dinner, and now he wants to quit his job and attend in January.  He&rsquo;s already studying.  My friend also seems interested.</p>

<p>I have had great first impressions of the other students, and each of them is growing on me more and more.</p>

<p>There&rsquo;s a nice tight range of skill levels but everyone is just really cool, too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experience at Fullstack]]></title>
    <link href="http://vinodlala.github.io/blog/2013/09/20/experience-at-fullstack/"/>
    <updated>2013-09-20T09:34:00-04:00</updated>
    <id>http://vinodlala.github.io/blog/2013/09/20/experience-at-fullstack</id>
    <content type="html"><![CDATA[<p>I have been really enjoying my experience at fullstack.</p>

<p>It&rsquo;s been both fun and challenging.</p>

<p>I think my favorite part of a bunch of great parts was learning how to do mass-mailing and texting were great real-world applications using what we have already gone through.</p>

<p>The second half of the first 11 testfirsts were out of my league, but having David go through the thought process out loud (reading through the rspec and then writing the code) was very helpful.  I plan on following the suggestion to do all of the testfirsts over again this weekend.</p>

<p>I did not like the idea of paired learning at first, but it worked out really well.  I may have been able to write the code faster alone, but I am sure that I learned much more in a pair (or trio in my case) because I had to get back into teacher mode to explain my ideas.  Sometimes talking it out made the idea make more sense to myself, and other times it made me realize that I was completely wrong.  My teammates also gave me tips and ideas I would not have been able to come up with on my own.</p>

<p>It seems like so much has happened even though only a week has passed.  I look forward to more.  I am actually happier than I have been in a long time, and it has been noticeable to my friends and family.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First post]]></title>
    <link href="http://vinodlala.github.io/blog/2013/09/17/first-post/"/>
    <updated>2013-09-17T11:03:00-04:00</updated>
    <id>http://vinodlala.github.io/blog/2013/09/17/first-post</id>
    <content type="html"><![CDATA[<p>Just checking out markdown:</p>

<h1>Header 1</h1>

<h2>Header 2</h2>

<h3>Header 3</h3>

<h4>Header 4</h4>

<h5>Header 5</h5>

<h6>Header 6</h6>

<h1>Alternate Header 1</h1>

<h2>Alternate Header 2</h2>

<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>

<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>

<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>

<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>

<ol>
<li>First ordered list item</li>
<li>Another item
⋅⋅* Unordered sub-list.</li>
<li>Actual numbers don&rsquo;t matter, just that it&rsquo;s a number
⋅⋅1. Ordered sub-list</li>
<li>And another item.</li>
</ol>


<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&rsquo;ll use three here to also align the raw Markdown).</p>

<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>

<ul>
<li>Unordered list can use asterisks</li>
<li>Or minuses</li>
<li>Or pluses</li>
</ul>


<p><a href="https://www.google.com">I&rsquo;m an inline-style link</a></p>

<p><a href="https://www.google.com" title="Google's Homepage">I&rsquo;m an inline-style link with title</a></p>

<p><a href="https://www.mozilla.org">I&rsquo;m a reference-style link</a></p>

<p><a href="../blob/master/LICENSE">I&rsquo;m a relative reference to a repository file</a></p>

<p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p>

<p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a></p>

<p>Some text to show that the reference links can follow later.</p>

<p>Here&rsquo;s our logo (hover to see the title text):</p>

<p>Inline-style:
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" title="Logo Title Text 1" alt="alt text" /></p>

<p>Reference-style:
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" title="Logo Title Text 2" alt="alt text" /></p>
]]></content>
  </entry>
  
</feed>
